import pandas as pd

def run_eda(df: pd.DataFrame) -> pd.DataFrame:
    total_count = len(df)

    results = pd.DataFrame(index=[
        "Count", 
        "Frequencies", 
        "Min", 
        "Max", 
        "Mean", 
        "Std", 
        "Q0.25", 
        "Median", 
        "Q0.75", 
        "Outliers", 
        "Total Missing Values", 
        "Rows with Missing Values", 
        "Columns with Missing Values", 
        "Number of Duplicate Rows",
    ], columns=df.columns.tolist())

    total_outliers = 0

    for column in df.columns:
        if pd.api.types.is_numeric_dtype(df[column]):

            counts = total_count
            min_val = df[column].min() 
            max_val = df[column].max() 
            mean = df[column].mean() 
            std = df[column].std() 
            q25 = df[column].quantile(0.25)
            median = df[column].median() 
            q75 = df[column].quantile(0.75) 
            iqr = q75 - q25
            lower_bound = q25 - 1.5 * iqr
            upper_bound = q75 + 1.5 * iqr
            outliers = ((df[column] < lower_bound) | (df[column] > upper_bound)).sum()
            total_outliers += outliers
            
            results.at["Count", column] = counts
            results.at["Min", column] = min_val
            results.at["Max", column] = max_val
            results.at["Mean", column] = mean
            results.at["Std", column] = std
            results.at["Q0.25", column] = q25
            results.at["Median", column] = median
            results.at["Q0.75", column] = q75
            results.at["Outliers", column] = outliers

        elif isinstance(df[column].dtype, pd.CategoricalDtype) or pd.api.types.is_string_dtype(df[column]):
            counts = df[column].value_counts()
            frequencies = round((counts / total_count), 2)
            results.at["Count", column] = counts.to_dict()
            results.at["Frequencies", column] = frequencies.to_dict()

    
    total_missing = df.isnull().sum()
    total_missing_count = total_missing.sum()
    rows_with_missing = df.isnull().any(axis=1).sum()
    missing_columns = df.columns[total_missing > 0].tolist()
    duplicate_rows = df.duplicated().sum()

    results.at["Outliers", "Total"] = total_outliers
    results.at["Total Missing Values", "Total"] = total_missing_count
    results.at["Rows with Missing Values", "Total"] = rows_with_missing
    results.at["Columns with Missing Values", "Total"] = len(missing_columns)
    results.at["Number of Duplicate Rows", "Total"] = duplicate_rows

    results = results.fillna('')
    
    return results

from IPython.display import display, HTML 


lena = run_eda(df)
html_output = lena.to_html()
display(HTML(html_output))

